"use client";

import { useForm, SubmitHandler } from "react-hook-form";
import { VulnerabilityFormInput } from "@/types";
import styles from "./VulnerabilityForm.module.css";
import { useEffect } from "react";

export default function VulnerabilityForm() {
  const { register, handleSubmit, setValue } =
    useForm<VulnerabilityFormInput>();

  const handleApply: SubmitHandler<VulnerabilityFormInput> = (
    formValues,
    event
  ) => {
    event?.preventDefault();
    fetch("/api/vulnerability", {
      method: "PUT",
      body: JSON.stringify(formValues),
    });
    localStorage.setItem("bacVul", JSON.stringify(formValues.bacVul));
    localStorage.setItem("xssVul", JSON.stringify(formValues.xssVul));
  };

  useEffect(() => {
    // Retrieve values from local storage and set the checked property
    const bacVul = JSON.parse(localStorage.getItem("bacVul") || "false");
    const xssVul = JSON.parse(localStorage.getItem("xssVul") || "false");

    // Set values to form inputs
    setValue("bacVul", bacVul);
    setValue("xssVul", xssVul);
  }, [setValue]);

  return (
    <form className={styles["form"]} onSubmit={handleSubmit(handleApply)}>
      <div>
        <label>Allow Broken Access Control</label>
        <input type="checkbox" {...register("bacVul")} />
      </div>
      <div>
        <label>Allow XSS (Cross-site scripting)</label>
        <input type="checkbox" {...register("xssVul")} />
      </div>
      <button className={styles["submit-btn"]} type="submit">
        Apply Vulnerability
      </button>
    </form>
  );
}
